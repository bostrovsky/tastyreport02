"""create users table

Revision ID: d2ced2ca4ac6
Revises: 
Create Date: 2025-05-12 19:29:38.178734

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'd2ced2ca4ac6'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('role', sa.String(length=32), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('last_login_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.drop_index('idx_transactions_account_number', table_name='transactions')
    op.drop_index('idx_transactions_executed_at', table_name='transactions')
    op.drop_table('transactions')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('transactions',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('account_number', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('transaction_id', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('transaction_type', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('transaction_subtype', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('symbol', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('instrument_type', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('underlying_symbol', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('action', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('value', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('price', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('quantity', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('commission', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('fees', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('multiplier', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('executed_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('clearing_fees', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('regulatory_fees', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('proprietary_index_option_fees', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('other_charge', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='transactions_pkey'),
    sa.UniqueConstraint('transaction_id', name='transactions_transaction_id_key')
    )
    op.create_index('idx_transactions_executed_at', 'transactions', ['executed_at'], unique=False)
    op.create_index('idx_transactions_account_number', 'transactions', ['account_number'], unique=False)
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
